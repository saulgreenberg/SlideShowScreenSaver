<Window x:Class="SlideShowScreenSaver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SlideShowScreenSaver"
        Title="MainWindow"
        Background="Black"
        KeyDown="Window_KeyDown"
        MouseDown="Window_MouseDown"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        WindowState="Maximized"
        WindowStyle="None"
        Loaded="MainWindow_Loaded">

    <Window.Resources>
        <!-- The FadeIn / FadeOut animations -->
        <!-- ReSharper disable once Xaml.RedundantResource -->
        <Storyboard x:Key="FadeIn">
            <DoubleAnimation Duration="0:0:.75" Storyboard.TargetProperty="Opacity" From="0" To="1">
            </DoubleAnimation>
        </Storyboard>

        <!-- ReSharper disable once Xaml.RedundantResource -->
        <Storyboard x:Key="FadeOut">
            <DoubleAnimation Duration="0:0:.75" Storyboard.TargetProperty="Opacity" To="0">
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources>

    <Grid Name="RootContainer" Background="Black" >

        <!--The two images that will hold the slides as they are generated, where animation occurs between them -->
        <Image x:Name="Image1" Stretch="Uniform"  Width="{Binding Path=ActualWidth, ElementName=RootContainer}" Height="{Binding Path=ActualHeight, ElementName=RootContainer}"  RenderTransformOrigin="0.5,0.5" >
                <Image.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="0" Y="0">
                        </TranslateTransform>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>

        <Image x:Name="Image2" Stretch="Uniform"  Width="{Binding Path=ActualWidth, ElementName=RootContainer}" Height="{Binding Path=ActualHeight, ElementName=RootContainer}"  RenderTransformOrigin="0.5,0.5" >
                <Image.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="0" Y="0">
                        </TranslateTransform>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>

        <!-- Text graphics that uses an outline font. -->
        <!-- We embed this in a label just to make its autosizing easier, but that may not be needed-->
        <!-- We also specify the font to use: FontFamily="SegoeUI"-->
        <Label VerticalAlignment="Bottom">
            <local:TextPath x:Name="DisplayText" Margin="10,0,0,5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Fill="Gold"
                        Stroke="Black"
                        StrokeThickness="1"
                        FontFamily="SegoeUI"
                        FontSize="26"
                        FontWeight="Bold"
                        Text="" />
        </Label>
    </Grid>
</Window>
